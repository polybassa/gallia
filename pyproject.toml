# SPDX-FileCopyrightText: AISEC Pentesting Team
#
# SPDX-License-Identifier: CC0-1.0

# https://github.com/astral-sh/uv/issues/3957
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gallia"
version = "1.9.0"
description = "Extendable Pentesting Framework"
readme = "README.md"
maintainers = [
    { name = "Stefan Tatschner", email = "stefan.tatschner@aisec.fraunhofer.de" },
    { name = "Tobias Specht", email = "tobias.specht@aisec.fraunhofer.de" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Security",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.11,<3.13"
dependencies = [
    "aiofiles >=24.1.0,<25.0",
    "aiosqlite >=0.18",
    "argcomplete >=2,<4",
    "zstandard >=0.19",
    "python-can >=4.2,<5.0",
    "tabulate >=0.9",
    "construct >=2.10,<3.0",
    "msgspec >=0.11,<0.19",
    "pydantic >=2.0,<3.0",
    "platformdirs >=2.6,<5.0",
    "psutil >=5.9.4,<7.0.0",
    "httpx >=0.26,<0.28",
    "more-itertools >=10.3.0,<11.0.0",
]

[project.scripts]
"gallia" = "gallia.cli:main"
"netzteil" = "opennetzteil.cli:main"
"cursed-hr" = "cursed_hr.cursed_hr:main"
"hr" = "hr:main"

[project.urls]
Documentation = "https://fraunhofer-aisec.github.io/gallia"
Repository = "https://github.com/Fraunhofer-AISEC/gallia"
"Bug Tracker" = "https://github.com/Fraunhofer-AISEC/gallia/issues"

[tool.uv]
dev-dependencies = [
    "Sphinx >=5.2,<8.0",
    "mypy >=1.0,<2.0",
    "pylsp-mypy >=0.6,<0.7",
    "pylsp-rope >=0.1,<0.2",
    "pytest >=7.1,<9.0",
    "pytest-asyncio >=0.20,<0.25",
    "python-lsp-server >=1.5,<2.0",
    "types-aiofiles >=23.1,<25.0",
    "types-psutil >=5.9.5.10,<7.0.0.0",
    "types-tabulate >=0.9,<0.10",
    "myst-parser >=3.0.1,<4.1",
    "sphinx-rtd-theme >=1,<3",
    "reuse >=4.0,<5.0",
    "construct-typing >=0.5.2,<0.7.0",
    "pytest-cov >=4,<6",
    "ruff >=0.6.0,<0.7.0",
]

[tool.mypy]
strict = true
plugins = [
    "pydantic.mypy"
]

[[tool.mypy.overrides]]
module = [
    "argcomplete",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
select = [
    # TODO: Enable this
    # "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "E",    # pycodestlye
    "F",    # pyflakes
    "I",    # isort
    "PL",   # pylint
    "PTH",  # flake8-use-pathlib
    "TID",  # flake8-tidy-imports
    "UP",   # pyupgrade
]
ignore = [
    "E402",     # Module level import not at top of file
    "E501",     # line length
    "PLR2004",  # magic value used in comparison
    "PLR0911",  # too many return statements
    "PLR0912",  # too many branches
    "PLR0913",  # too many arguments to function call
    "PLR0915",  # too many statements
    "PLC1901",  # empty string is falsey
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "error::UserWarning",
]
